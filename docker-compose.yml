version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6380:6379"  # Используем стандартный порт Redis
    volumes:
      - redis_data:/data
    networks:
      - app-network

  database:  # Переименовано из db для избежания путаницы
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: nationalize
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d nationalize"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: .
    command: >
      bash -c "sleep 10 && 
               while ! nc -z database 5432; do sleep 1; done && 
               python manage.py migrate && 
               python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0  # Стандартный порт Redis внутри сети
      - DATABASE_URL=postgres://user:password@database:5432/nationalize
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  frontend:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  redis_data:
  postgres_data:

networks:
  app-network:
    driver: bridge